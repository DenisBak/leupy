"use strict";(self.__LOADABLE_LOADED_CHUNKS__=self.__LOADABLE_LOADED_CHUNKS__||[]).push([[11336],{84082:function(e,t,r){r.d(t,{B:function(){return $}});var o=r(30091),a=(r(21703),r(98116)),n=r(80472),i=r(76588),s=r(35529),c=r(29178),l=r(27636),p=r(54236),u=r(63246),d=r(78260),y=r(75381),m=r(57640),_=r(82525),g=r(83781),f=r(5500);const S=(0,s.Record)({city_code:s.String.optional(),city_name:s.String.optional(),country_code:s.String.optional(),country_name:s.String.optional(),code:s.String.optional(),name:s.String.optional(),type:(0,s.Union)((0,s.Literal)(f.A.City),(0,s.Literal)(f.A.Airport),(0,s.Literal)(f.A.Country)),coordinates:(0,s.Record)({lat:s.Number,lon:s.Number}).optional()}),A=(0,a.createEvent)({sid:"1ix8oe"}),k=(0,d.cr)("platform",{name:"geoip",samplingRate:.1}),{urlWithApiHost:h}=_.B.outputs,{$localeDeprecated:L}=p.z.outputs,{$isClient:v}=u.y.outputs,E=(0,a.withFactory)({sid:"-prj3kw",fn:()=>(0,i.s5)({name:"nearestPlases",enabled:v,request:{method:"GET",url:h(y.Nv`${m.H.SUGGEST_HOST}/v2/nearest_places.json`,{escape:!1}),query:{source:L,fn:(e,t)=>({locale:t})}},response:{contract:(0,n.v)((0,s.Array)(S)),mapData:({result:e})=>(e=>{if(!e)return null;const{code:t,name:r,type:o,city_code:a,city_name:n,country_code:i,country_name:s,coordinates:c}=e;return t&&r&&o?{iata:t,name:r,type:o,coordinates:c,cityIata:a,cityName:n,countryIata:i,countryName:s}:null})(e[0]??null)}})}),[w,D]=(0,a.withFactory)({sid:"7l1kve",fn:()=>(0,l.K)(E.$data)});(0,a.withFactory)({sid:"-am1jxn",fn:()=>(0,i.Vs)(E,{after:"10s"})}),(0,a.sample)({and:[{clock:E.finished.failure,fn:({error:e,params:t})=>{const{errorType:r,...o}=e;return{msg:"Nearest places request failed",label:"geoipPlaces",error:new Error(r??"unknown error type"),extra:{params:t,...o}}},target:k.sendWarningLog}],or:{sid:"-ajudk7"}}),(0,a.sample)({and:[{clock:A,filter:(0,a.withFactory)({sid:"-r5l1ck",fn:()=>(0,c.c)(w)}),target:E.start}],or:{sid:"-9mupyj"}});const N=(0,a.createStore)(null,{sid:"ki6syd"}),C=(0,g.Sy)((0,g.ZE)("service/helios/geo_ip_country/initiated"));(0,a.sample)({and:[{clock:A,source:N,fn:e=>({geoIpCountry:e}),target:C}],or:{sid:"-8pb9ri"}});const I={outputs:{$geoIpPlace:w,$geoIpCountry:N},inputs:{requestGeoIpPlace:E.start},internals:{$geoIpPlaceOverride:D}},$=(0,o.Yn)({lifecycle:{start:A},importMetaUrl:"file:///home/jenkins/agent/workspace/selene/client/src/platform/services/geoip/index.ts",api:I})}}]);
//# sourceMappingURL=https://private-static.prod.k8s.int.avs.io/selene-source-maps/platform-d4b47ca3ccb45e7d4b3dbacbfc9ebc41b908c4be.4d62ffaff4ed3ef1d9e4.min.js.map